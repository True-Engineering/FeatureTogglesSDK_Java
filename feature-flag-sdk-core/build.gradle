plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'nebula.optional-base'
}

group = 'ru.trueengineering'
sourceCompatibility = '8'
targetCompatibility = '8'

dependencies {
    annotationProcessor 'org.springframework.boot:spring-boot-autoconfigure-processor'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation 'org.hibernate.validator:hibernate-validator:6.0.21.Final'
    implementation 'javax.validation:validation-api:2.0.1.Final'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'org.reflections:reflections:0.10'

    compileOnly 'org.projectlombok:lombok:1.18.22'
    annotationProcessor 'org.projectlombok:lombok:1.18.22'
    testCompileOnly 'org.projectlombok:lombok:1.18.22'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.22'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    api "org.springframework.cloud:spring-cloud-starter-kubernetes-config:1.1.6.RELEASE"
    api 'io.github.openfeign:feign-core:11.1'
    api 'org.springframework.cloud:spring-cloud-starter-netflix-zuul:2.2.10.RELEASE'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

bootJar {
    enabled = false
    classifier 'boot'
}

jar {
    enabled = true
    getDestinationDirectory().set(new File("build/jar"))
    archiveName("${project.name}-${System.getenv('GITVERSION_ASSEMBLYSEMFILEVER')}.jar")
}
